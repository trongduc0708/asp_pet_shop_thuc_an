@{
    ViewData["Title"] = "Danh mục sản phẩm";
    var category = ViewBag.Category as Pet_Shop.Models.Entities.Category;
    var products = ViewBag.Products as IEnumerable<Pet_Shop.Models.Entities.Product>;
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var totalPages = ViewBag.TotalPages as int? ?? 1;
    var totalItems = ViewBag.TotalItems as int? ?? 0;
}

@if (category != null)
{
    <div class="container">
        <!-- Category Header -->
        <div class="row mb-4">
            <div class="col-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
                        <li class="breadcrumb-item"><a href="/Shop/Products">Cửa hàng</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@category.CategoryName</li>
                    </ol>
                </nav>
                
                <h1 class="mb-3">@category.CategoryName</h1>
                @if (!string.IsNullOrEmpty(category.Description))
                {
                    <p class="text-muted">@category.Description</p>
                }
                <p class="text-muted">Hiển thị @totalItems sản phẩm</p>
            </div>
        </div>

        @if (products != null && products.Any())
        {
            <!-- Products Grid -->
            <div class="row">
                @foreach (var product in products)
                {
                    <div class="col-md-4 col-lg-3 mb-4">
                        <div class="card h-100">
                            @if (product.ProductImages != null && product.ProductImages.Count > 0)
                            {
                                @foreach (var image in product.ProductImages)
                                {
                                    <img src="@image.ImageURL" class="card-img-top" alt="@image.AltText" style="height: 200px; object-fit: cover;">
                                    break;
                                }
                            }
                            else
                            {
                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                    <i class="fas fa-image fa-3x text-muted"></i>
                                </div>
                            }
                            
                            <div class="card-body d-flex flex-column">
                                <h6 class="card-title">@product.ProductName</h6>
                                <p class="card-text text-muted small">@product.ShortDescription</p>
                                
                                <div class="mt-auto">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        @if (product.SalePrice != null && product.SalePrice < product.Price)
                                        {
                                            <div>
                                                <span class="text-danger fw-bold">@String.Format("{0:N0}", product.SalePrice) ₫</span>
                                                <small class="text-muted text-decoration-line-through d-block">@product.Price.ToString("N0") ₫</small>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="fw-bold">@product.Price.ToString("N0") ₫</span>
                                        }
                                    </div>
                                    
                                    <div class="d-flex gap-2">
                                        <a href="/Shop/Product/@product.ProductID" class="btn btn-outline-primary btn-sm flex-fill">Xem chi tiết</a>
                                        <button type="button" class="btn btn-primary btn-sm add-to-cart-btn" data-product-id="@product.ProductID">
                                            <i class="fas fa-shopping-cart"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="/Shop/Category/@category.CategoryID?page=@(currentPage - 1)">Trước</a>
                            </li>
                        }
                        
                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="/Shop/Category/@category.CategoryID?page=@i">@i</a>
                            </li>
                        }
                        
                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="/Shop/Category/@category.CategoryID?page=@(currentPage + 1)">Sau</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                <h4>Chưa có sản phẩm</h4>
                <p class="text-muted">Danh mục này chưa có sản phẩm nào.</p>
                <a href="/Shop/Products" class="btn btn-primary">Xem tất cả sản phẩm</a>
            </div>
        }
    </div>
}
else
{
    <div class="container">
        <div class="text-center py-5">
            <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
            <h3>Danh mục không tồn tại</h3>
            <p class="text-muted">Danh mục bạn đang tìm kiếm không tồn tại.</p>
            <a href="/Shop/Products" class="btn btn-primary">Quay lại cửa hàng</a>
        </div>
    </div>
}

@section Scripts {
<script>
$(document).ready(function() {
    $('.add-to-cart-btn').on('click', function() {
        var productId = $(this).data('product-id');
        var $btn = $(this);
        var originalHtml = $btn.html();
        
        // Disable button and show loading
        $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
        
        $.ajax({
            url: '/Cart/AddToCart',
            type: 'POST',
            data: {
                productId: productId,
                quantity: 1
            },
            success: function(response) {
                if (response.success) {
                    // Show success message
                    showToast('success', response.message);
                    
                    // Update cart count in header if exists
                    if (response.cartCount !== undefined) {
                        $('#cartCount').text(response.cartCount);
                        if (response.cartCount > 0) {
                            $('#cartCount').show();
                        } else {
                            $('#cartCount').hide();
                        }
                    }
                } else {
                    showToast('error', response.message);
                }
            },
            error: function(xhr, status, error) {
                showToast('error', 'Có lỗi xảy ra khi thêm vào giỏ hàng');
            },
            complete: function() {
                // Re-enable button
                $btn.prop('disabled', false).html(originalHtml);
            }
        });
    });
    
    function showToast(type, message) {
        // Create toast element
        var toastHtml = `
            <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;
        
        // Add to toast container
        if ($('#toastContainer').length === 0) {
            $('body').append('<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;"></div>');
        }
        
        $('#toastContainer').append(toastHtml);
        
        // Show toast
        var toastElement = $('#toastContainer .toast').last();
        var toast = new bootstrap.Toast(toastElement[0]);
        toast.show();
        
        // Remove toast element after it's hidden
        toastElement.on('hidden.bs.toast', function() {
            $(this).remove();
        });
    }
});
</script>
}
