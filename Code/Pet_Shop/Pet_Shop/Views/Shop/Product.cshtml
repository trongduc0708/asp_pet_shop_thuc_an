@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    var product = ViewBag.Product as Pet_Shop.Models.Entities.Product;
    var relatedProducts = ViewBag.RelatedProducts as IEnumerable<Pet_Shop.Models.Entities.Product>;
}

@if (product != null)
{
    <div class="container">
        <div class="row">
            <!-- Product Images -->
            <div class="col-md-6">
                <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @if (product.ProductImages != null && product.ProductImages.Count > 0)
                        {
                            @foreach (var (image, index) in product.ProductImages.Select((img, i) => (img, i)))
                            {
                                <div class="carousel-item @(index == 0 ? "active" : "")">
                                    <img src="@image.ImageURL" class="d-block w-100" alt="@image.AltText" style="height: 400px; object-fit: cover;">
                                </div>
                            }
                        }
                        else
                        {
                            <div class="carousel-item active">
                                <div class="bg-light d-flex align-items-center justify-content-center" style="height: 400px;">
                                    <i class="fas fa-image fa-5x text-muted"></i>
                                </div>
                            </div>
                        }
                    </div>
                    
                    @if (product.ProductImages != null && product.ProductImages.Count() > 1)
                    {
                        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    }
                </div>
            </div>

            <!-- Product Info -->
            <div class="col-md-6">
                <div class="product-info">
                    <h1 class="product-title">@product.ProductName</h1>
                    
                    <!-- Category & Brand -->
                    <div class="mb-3">
                        <span class="badge bg-primary me-2">@product.Category?.CategoryName</span>
                        <span class="badge bg-secondary">@product.Brand?.BrandName</span>
                    </div>

                    <!-- Price -->
                    <div class="price-section mb-4">
                        @if (product.SalePrice != null && product.SalePrice < product.Price)
                        {
                            <div class="d-flex align-items-center">
                                <span class="h3 text-danger me-3">@product.SalePrice?.ToString("N0") ₫</span>
                                <span class="h5 text-muted text-decoration-line-through">@product.Price.ToString("N0") ₫</span>
                                <span class="badge bg-danger ms-2">Giảm @((int)((product.Price - product.SalePrice) / product.Price * 100))%</span>
                            </div>
                        }
                        else
                        {
                            <span class="h3 text-primary">@product.Price.ToString("N0") ₫</span>
                        }
                    </div>

                    <!-- Product Details -->
                    <div class="product-details mb-4">
                        <h5>Thông tin sản phẩm</h5>
                        <ul class="list-unstyled">
                            @if (!string.IsNullOrEmpty(product.ProductCode))
                            {
                                <li><strong>Mã sản phẩm:</strong> @product.ProductCode</li>
                            }
                            @if (!string.IsNullOrEmpty(product.ProductType))
                            {
                                <li><strong>Loại:</strong> @product.ProductType</li>
                            }
                            @if (!string.IsNullOrEmpty(product.PetType))
                            {
                                <li><strong>Dành cho:</strong> @product.PetType</li>
                            }
                            @if (product.Weight.HasValue)
                            {
                                <li><strong>Trọng lượng:</strong> @product.Weight kg</li>
                            }
                            @if (!string.IsNullOrEmpty(product.Dimensions))
                            {
                                <li><strong>Kích thước:</strong> @product.Dimensions</li>
                            }
                            @if (product.ExpiryDate.HasValue)
                            {
                                <li><strong>Hạn sử dụng:</strong> @product.ExpiryDate.Value.ToString("dd/MM/yyyy")</li>
                            }
                        </ul>
                    </div>

                    <!-- Description -->
                    @if (!string.IsNullOrEmpty(product.Description))
                    {
                        <div class="product-description mb-4">
                            <h5>Mô tả sản phẩm</h5>
                            <p class="text-muted">@product.Description</p>
                        </div>
                    }

                    <!-- Add to Cart -->
                    <div class="add-to-cart-section">
                        <form id="addToCartForm">
                            <input type="hidden" name="productId" value="@product.ProductID" />
                            <div class="row mb-3">
                                <div class="col-4">
                                    <label for="quantity" class="form-label">Số lượng:</label>
                                    <input type="number" class="form-control" id="quantity" name="quantity" value="1" min="1" max="10">
                                </div>
                            </div>
                            <div class="d-grid gap-2 d-md-flex">
                                <button type="submit" class="btn btn-primary btn-lg me-md-2" id="addToCartBtn">
                                    <i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ hàng
                                </button>
                                <button type="button" class="btn btn-outline-danger btn-lg wishlist-btn" data-product-id="@product.ProductID">
                                    <i class="fas fa-heart me-2"></i>Yêu thích
                                </button>
                            </div>
                        </form>
                    </div>

                    <!-- Product Tags -->
                    <div class="product-tags mt-4">
                        @if (product.IsNew)
                        {
                            <span class="badge bg-success me-2">Mới</span>
                        }
                        @if (product.IsFeatured)
                        {
                            <span class="badge bg-warning me-2">Nổi bật</span>
                        }
                        @if (product.IsActive)
                        {
                            <span class="badge bg-info">Còn hàng</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Related Products -->
        @if (relatedProducts != null && relatedProducts.Any())
        {
            <div class="row mt-5">
                <div class="col-12">
                    <h3 class="mb-4">Sản phẩm liên quan</h3>
                    <div class="row">
                        @foreach (var relatedProduct in relatedProducts)
                        {
                            <div class="col-md-3 col-sm-6 mb-4">
                                <div class="card h-100">
                                    @if (relatedProduct.ProductImages != null && relatedProduct.ProductImages.Count > 0)
                                    {
                                        @foreach (var image in relatedProduct.ProductImages)
                                        {
                                            <img src="@image.ImageURL" class="card-img-top" alt="@image.AltText" style="height: 200px; object-fit: cover;">
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                            <i class="fas fa-image fa-3x text-muted"></i>
                                        </div>
                                    }
                                    
                                    <div class="card-body d-flex flex-column">
                                        <h6 class="card-title">@relatedProduct.ProductName</h6>
                                        
                                        <div class="mt-auto">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                @if (relatedProduct.SalePrice != null && relatedProduct.SalePrice < relatedProduct.Price)
                                                {
                                                    <div>
                                                        <span class="text-danger fw-bold">@relatedProduct.SalePrice?.ToString("N0") ₫</span>
                                                        <small class="text-muted text-decoration-line-through d-block">@relatedProduct.Price.ToString("N0") ₫</small>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="fw-bold">@relatedProduct.Price.ToString("N0") ₫</span>
                                                }
                                            </div>
                                            
                                            <a href="/Shop/Product/@relatedProduct.ProductID" class="btn btn-outline-primary btn-sm w-100">Xem chi tiết</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="container">
        <div class="text-center py-5">
            <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
            <h3>Sản phẩm không tồn tại</h3>
            <p class="text-muted">Sản phẩm bạn đang tìm kiếm không tồn tại hoặc đã bị xóa.</p>
            <a href="/Shop/Products" class="btn btn-primary">Quay lại cửa hàng</a>
        </div>
    </div>
}

@section Scripts {
<script>
$(document).ready(function() {
    $('#addToCartForm').on('submit', function(e) {
        e.preventDefault();
        
        var formData = {
            productId: $('input[name="productId"]').val(),
            quantity: $('#quantity').val()
        };
        
        var $btn = $('#addToCartBtn');
        var originalText = $btn.html();
        
        // Disable button and show loading
        $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Đang thêm...');
        
        $.ajax({
            url: '/Cart/AddToCart',
            type: 'POST',
            data: formData,
            success: function(response) {
                if (response.success) {
                    // Show success message
                    showToast('success', response.message);
                    
                    // Update cart count in header if exists
                    if (response.cartCount !== undefined) {
                        $('#cartCount').text(response.cartCount);
                        if (response.cartCount > 0) {
                            $('#cartCount').show();
                        } else {
                            $('#cartCount').hide();
                        }
                    }
                    
                    // Reset form
                    $('#quantity').val(1);
                } else {
                    showToast('error', response.message);
                }
            },
            error: function(xhr, status, error) {
                showToast('error', 'Có lỗi xảy ra khi thêm vào giỏ hàng');
            },
            complete: function() {
                // Re-enable button
                $btn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    function showToast(type, message) {
        // Create toast element
        var toastHtml = `
            <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;
        
        // Add to toast container
        if ($('#toastContainer').length === 0) {
            $('body').append('<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;"></div>');
        }
        
        $('#toastContainer').append(toastHtml);
        
        // Show toast
        var toastElement = $('#toastContainer .toast').last();
        var toast = new bootstrap.Toast(toastElement[0]);
        toast.show();
        
        // Remove toast element after it's hidden
        toastElement.on('hidden.bs.toast', function() {
            $(this).remove();
        });
    }
    
    // Wishlist functionality
    $('.wishlist-btn').on('click', function() {
        var productId = $(this).data('product-id');
        var $btn = $(this);
        var originalHtml = $btn.html();
        
        // Disable button and show loading
        $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Đang xử lý...');
        
        $.ajax({
            url: '/Wishlist/AddToWishlist',
            type: 'POST',
            data: {
                productId: productId
            },
            success: function(response) {
                if (response.success) {
                    // Change button to filled heart
                    $btn.removeClass('btn-outline-danger').addClass('btn-danger');
                    $btn.html('<i class="fas fa-heart me-2"></i>Đã yêu thích');
                    
                    showToast('success', response.message);
                } else {
                    showToast('error', response.message);
                }
            },
            error: function(xhr, status, error) {
                showToast('error', 'Có lỗi xảy ra khi thêm vào yêu thích');
            },
            complete: function() {
                // Re-enable button
                $btn.prop('disabled', false);
            }
        });
    });
});
</script>
}
